<?php

require_once(dirname(__FILE__).'/../../config/config.php');
require_once 'PHPUnit/Autoload.php';
require_once 'src/dao/BillMongoDAO.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-07-19 at 20:38:29.
 */
class BillDAOTest extends PHPUnit_Framework_TestCase
{

    private $mongoDB;
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->mongoDB = $mongoDB = array('username' => 'crowd',  'password' => 'sourcer',
                         'host' => 'localhost', 'databaseName' => 'crowdsourcer');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testAddBill()
    {
        $bill = array('subject' => 'lulz', 'id' => 123);

        $mockMongoCollection = $this->getMock('MongoCollection',
                array('insert'));
        $mockMongo = $this->getMock('Mongo',
                array('selectCollection'));

        $mockMongo->expects($this->once())
             ->method('selectCollection')
             ->will($this->returnValue($mockMongoCollection))
             ->with($this->equalTo('bills'));
        $mockMongoCollection->expects($this->once())
             ->method('insert')
             ->will($this->returnValue(true))
             ->with($this->equalTo($bill));

        $billDAO = new BillDAO($mockMongo);
        $billDAO->addBill($bill);
    }

    public function testAddBillMissingSubject()
    {
        $bill = array( 'id' => 123);

        $mockMongoCollection = $this->getMock('MongoCollection',
                array('insert'));
        $mockMongoCollection->expects($this->never())
             ->method('insert');

        $mockMongo = $this->getMock('Mongo',
                array('selectCollection'));

        $mockMongo->expects($this->never())
             ->method('selectCollection');

        $this->setExpectedException('ParameterCheckException');
        $billDAO = new BillDAO($mockMongo);
        $billDAO->addBill($bill);
    }


    public function testAddBillMissingId()
    {
        $bill = array( 'subject' => 'lulz');

        $mockMongoCollection = $this->getMock('MongoCollection',
                array('insert'));
        $mockMongo = $this->getMock('Mongo',
                array('selectCollection'));

       $mockMongo = $this->getMock('Mongo',
                array('selectCollection'));

        $mockMongo->expects($this->never())
             ->method('selectCollection');

        $this->setExpectedException('ParameterCheckException');
        $billDAO = new BillDAO($mockMongo);
        $billDAO->addBill($bill);
    }

}
